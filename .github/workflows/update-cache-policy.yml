name: Update cache control policy

on:
  workflow_dispatch:
    inputs:
      cache_type:
        type: choice
        description: Select the cache control policy type
        required: true
        options:
          - none
          - cache
      environment:
        type: choice
        description: The environment to update the cache control policy
        required: false
        options:
          - development
          - production
          - staging
      path_pattern:
        description: The path pattern to update the cache control policy
        required: false

permissions:
  id-token: write # allows the JWT to be requested from GitHub's OIDC provider
  contents: read # This is required for actions/checkout

jobs:
  validate-actor:
    # Only allow to be deployed from tags and main branch
    # if: startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main'
    if: github.ref == 'refs/heads/chore.update-cache-policy-workflow-sdk-2711'
    uses: ./.github/workflows/validate-actor.yml
    secrets:
      PAT: ${{ secrets.PAT }}

  update-cache-policy:
    needs: validate-actor
    name: Update cache control policy for SDK artifacts
    runs-on: [self-hosted, Linux, X64]

    steps:
      - name: Install AWS CLI
        uses: unfor19/install-aws-cli-action@master

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_PROD_ACCOUNT_ID }}:role/${{ secrets.AWS_PROD_S3_SYNC_ROLE }}
          aws-region: us-east-1

      - name: Set `cache_type` and response headers policy ID
        run: |
          echo "cache_type=${{ github.event.inputs.cache_type }}" >> $GITHUB_ENV
          echo "RESPONSE_HEADERS_POLICY_ID=${{ secrets.AWS_PROD_CF_RESPONSE_HEADERS_POLICY_ID }}" >> $GITHUB_ENV

      - name: Determine the path patterns
        id: determine-path-patterns
        run: |
          # if the path pattern is provided, use it
          # Otherwise, determine the path patterns in an array based on the environment
          if [ -n "${{ github.event.inputs.path_pattern }}" ]; then
            echo "path_patterns=${{ github.event.inputs.path_pattern }}" >> $GITHUB_ENV
          else
            case ${{ github.event.inputs.environment }} in
              production)
                echo "path_patterns=adobe-analytics-js v3 v1.1" >> $GITHUB_ENV
                ;;
              staging)
                echo "path_patterns=staging" >> $GITHUB_ENV
                ;;
              development)
                echo "path_patterns=dev" >> $GITHUB_ENV
                ;;
              *)
                echo "Invalid environment provided: ${{ github.event.inputs.environment }}"
                exit 1
                ;;
            esac
          fi

      - name: Get CloudFront Distribution Config
        run: |
          aws cloudfront get-distribution-config --id ${{ secrets.AWS_PROD_CF_DISTRIBUTION_ID }} --output yaml > dist-config.yaml

      - name: Modify Distribution Config for Response Headers Policy
        run: |
          yq -i "
            .IfMatch = .ETag |
            del(.ETag)
          " dist-config.yaml

          # Load the path patterns into an array
          IFS=' ' read -r -a path_patterns <<< "${{ env.path_patterns }}"

          # Loop through each path pattern and modify the config
          for path_pattern in "${path_patterns[@]}"; do
            yq -i "
              .DistributionConfig.CacheBehaviors.Items[] |=
              (if .PathPattern == \"${path_pattern}\" then
                if \"${{ env.cache_type }}\" == \"cache\" then
                  .ResponseHeadersPolicyId = \"${{ env.RESPONSE_HEADERS_POLICY_ID }}\"
                else
                  del(.ResponseHeadersPolicyId)
                end
              else .
              end)
            " dist-config.yaml
          done

      - name: Update CloudFront Distribution
        run: |
          aws cloudfront update-distribution \
            --id ${{ secrets.AWS_PROD_CF_DISTRIBUTION_ID }} \
            --cli-input-yaml file://dist-config.yaml
