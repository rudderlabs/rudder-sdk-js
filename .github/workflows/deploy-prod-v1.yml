name: Deploy to PROD v1

on:
  workflow_dispatch:
  pull_request:
    branches:
      - v1-production
    types:
      - closed

permissions:
  id-token: write # allows the JWT to be requested from GitHub's OIDC provider
  contents: read # This is required for actions/checkout

jobs:
  deploy-tag:
    name: Deploy to PROD
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/heads/v1-production') || github.event.pull_request.merged == true
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_PROD_ACCOUNT_ID }}:role/${{ secrets.AWS_PROD_S3_SYNC_ROLE }}
          aws-region: us-east-1

      - name: Checkout source branch
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Build and sync files to S3
        env:
          HUSKY: 0
        run: |
          npm install
          npm run prodTest && npm test
          npm run buildProdBrowser

      - name: Fix Bugsnag API key
        env:
          BUGSNAG_API_KEY: ${{ secrets.RS_BUGSNAG_API_KEY }}
        run: |
          sed -i -e 's|{{RS_BUGSNAG_API_KEY}}|'$BUGSNAG_API_KEY'|' dist/rudder-analytics.min.js

      - name: Sync files to S3 v1
        run: |
          aws s3 cp dist/rudder-analytics.min.js s3://${{ secrets.AWS_PROD_S3_BUCKET_NAME }}/v1/rudder-analytics.min.js --cache-control max-age=3600
          aws s3 cp dist/rudder-analytics.min.js.map s3://${{ secrets.AWS_PROD_S3_BUCKET_NAME }}/v1/rudder-analytics.min.js.map --cache-control max-age=3600
          aws s3 cp s3://${{ secrets.AWS_PROD_S3_BUCKET_NAME }}/v1/rudder-analytics.min.js s3://${{ secrets.AWS_PROD_S3_BUCKET_NAME }}/rudder-analytics.min.js --cache-control max-age=3600
          aws s3 cp s3://${{ secrets.AWS_PROD_S3_BUCKET_NAME }}/v1/rudder-analytics.min.js.map s3://${{ secrets.AWS_PROD_S3_BUCKET_NAME }}/rudder-analytics.min.js.map --cache-control max-age=3600
          aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_PROD_CF_DISTRIBUTION_ID }} --paths "/v1/rudder-analytics.min.js" "/v1/rudder-analytics.min.js.map" "/rudder-analytics.min.js" "/rudder-analytics.min.js.map"

      - name: Get new version number
        run: |
          current_version=$(jq -r .version package.json)
          echo "CURRENT_VERSION_VALUE=$current_version" >> $GITHUB_ENV
          echo "DATE=$(date)" >> $GITHUB_ENV

      - name: Send message to Slack channel
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          PROJECT_NAME: 'JS SDK v1 Browser Package'
          CDN_URL: 'https://cdn.rudderlabs.com/v1.1/rudder-analytics.min.js'
        with:
          channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          payload: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "New release: ${{ env.PROJECT_NAME }}"
                  }
                },
                {
                  "type": "divider"
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Release: <${{ env.CDN_URL }}|${{ env.CURRENT_VERSION_VALUE }}>*\n${{ env.DATE }}"
                  }
                }
              ]
            }
