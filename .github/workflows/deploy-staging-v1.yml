name: Deploy to STAGING v1

on:
  workflow_dispatch:
  pull_request:
    branches:
      - v1-staging
    types:
      - closed

permissions:
  id-token: write # allows the JWT to be requested from GitHub's OIDC provider
  contents: read # This is required for actions/checkout

jobs:
  deploy-tag:
    name: Deploy to STAGING v1
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/tags/bugbash') || startsWith(github.ref, 'refs/heads/v1-staging') || github.event.pull_request.merged == true
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_STAGING_ACCOUNT_ID }}:role/${{ secrets.AWS_STAGING_S3_SYNC_ROLE }}
          aws-region: us-east-1

      - name: Checkout source branch
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Build files
        env:
          HUSKY: 0
        run: |
          npm ci
          npm run build:browser --staging=true

      - name: Fix Bugsnag API key
        env:
          BUGSNAG_API_KEY: ${{ secrets.RS_STAGING_BUGSNAG_API_KEY }}
        run: |
          sed -i -e 's|{{RS_BUGSNAG_API_KEY}}|'$BUGSNAG_API_KEY'|' dist/rudder-analytics-staging.min.js

      - name: Sync files to S3
        run: |
          aws s3 cp dist/rudder-analytics-staging.min.js s3://${{ secrets.AWS_STAGING_S3_BUCKET_NAME }}/v1/rudder-analytics-staging.min.js --cache-control max-age=3600
          aws s3 cp dist/rudder-analytics-staging.min.js.map s3://${{ secrets.AWS_STAGING_S3_BUCKET_NAME }}/v1/rudder-analytics-staging.min.js.map --cache-control max-age=3600
          aws s3 cp s3://${{ secrets.AWS_STAGING_S3_BUCKET_NAME }}/v1/rudder-analytics-staging.min.js s3://${{ secrets.AWS_STAGING_S3_BUCKET_NAME }}/rudder-analytics-staging.min.js --cache-control max-age=3600
          aws s3 cp s3://${{ secrets.AWS_STAGING_S3_BUCKET_NAME }}/v1/rudder-analytics-staging.min.js.map s3://${{ secrets.AWS_STAGING_S3_BUCKET_NAME }}/rudder-analytics-staging.min.js.map --cache-control max-age=3600
          aws s3 cp s3://${{ secrets.AWS_STAGING_S3_BUCKET_NAME }}/v1/rudder-analytics-staging.min.js s3://${{ secrets.AWS_STAGING_S3_BUCKET_NAME }}/v1/staging/rudder-analytics-staging.min.js --cache-control max-age=3600
          aws s3 cp s3://${{ secrets.AWS_STAGING_S3_BUCKET_NAME }}/v1/rudder-analytics-staging.min.js.map s3://${{ secrets.AWS_STAGING_S3_BUCKET_NAME }}/v1/staging/rudder-analytics-staging.min.js.map --cache-control max-age=3600
          aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_STAGING_CF_DISTRIBUTION_ID }} --paths "/v1/rudder-analytics-staging.min.js" "/v1/rudder-analytics-staging.min.js.map" "/v1/staging/rudder-analytics-staging.min.js" "/v1/staging/rudder-analytics-staging.min.js.map" "/rudder-analytics-staging.min.js" "/rudder-analytics-staging.min.js.map"