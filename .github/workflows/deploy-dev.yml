name: Deploy to DEV v1.1

on:
  workflow_dispatch:
  pull_request:
    branches:
      - production-staging
    types:
      - closed

permissions:
  id-token: write # allows the JWT to be requested from GitHub's OIDC provider
  contents: read # This is required for actions/checkout

jobs:
  deploy-tag:
    name: Deploy to DEV v1.1
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/heads/production-staging') || startsWith(github.ref, 'refs/heads/hotfix/') || github.event.pull_request.merged == true
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_DEV_ACCOUNT_ID }}:role/${{ secrets.AWS_DEV_S3_SYNC_ROLE }}
          aws-region: us-east-1

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Build files
        env:
          HUSKY: 0
          BUGSNAG_API_KEY: ${{ secrets.RS_DEV_BUGSNAG_API_KEY }}
          BUGSNAG_RELEASE_STAGE: 'development'
        run: |
          npm ci
          npm run build:browser:dev
          npm run build:integration:all

      - name: Sync files to S3
        run: |
          aws s3 cp dist/legacy/rudder-analytics.js s3://${{ secrets.AWS_DEV_S3_BUCKET_NAME }}/dev/latest/rudder-analytics.js --cache-control max-age=3600
          aws s3 cp dist/legacy/js-integrations/ s3://${{ secrets.AWS_DEV_S3_BUCKET_NAME }}/dev/latest/js-integrations/ --recursive --cache-control max-age=3600
          AWS_MAX_ATTEMPTS=10 aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_DEV_CF_DISTRIBUTION_ID }} --paths "/dev/latest*"
