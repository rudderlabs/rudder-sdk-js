diff --git a/node_modules/nx/src/command-line/yargs-utils/shared-options.js b/node_modules/nx/src/command-line/yargs-utils/shared-options.js
index 2ab205f..981e878 100644
--- a/node_modules/nx/src/command-line/yargs-utils/shared-options.js
+++ b/node_modules/nx/src/command-line/yargs-utils/shared-options.js
@@ -175,6 +175,10 @@ function withRunManyOptions(yargs) {
         describe: '[deprecated] `run-many` runs all targets on all projects in the workspace if no projects are provided. This option is no longer required.',
         type: 'boolean',
         default: true,
+    })
+        .option('silent', {
+        type: 'boolean',
+        default: false,
     });
 }
 exports.withRunManyOptions = withRunManyOptions;
diff --git a/node_modules/nx/src/tasks-runner/life-cycles/static-run-one-terminal-output-life-cycle.js b/node_modules/nx/src/tasks-runner/life-cycles/static-run-one-terminal-output-life-cycle.js
index da8162e..1a44348 100644
--- a/node_modules/nx/src/tasks-runner/life-cycles/static-run-one-terminal-output-life-cycle.js
+++ b/node_modules/nx/src/tasks-runner/life-cycles/static-run-one-terminal-output-life-cycle.js
@@ -22,6 +22,9 @@ class StaticRunOneTerminalOutputLifeCycle {
         this.cachedTasks = [];
     }
     startCommand() {
+        if (this.args.silent) {
+            return;
+        }
         const numberOfDeps = this.tasks.length - 1;
         const title = `Running ${(0, formatting_utils_1.formatTargetsAndProjects)(this.projectNames, this.args.targets, this.tasks)}:`;
         if (numberOfDeps > 0) {
@@ -33,6 +36,9 @@ class StaticRunOneTerminalOutputLifeCycle {
         }
     }
     endCommand() {
+        if (this.args.silent) {
+            return;
+        }
         output_1.output.addNewline();
         if (this.failedTasks.length === 0) {
             output_1.output.addVerticalSeparatorWithoutNewLines('green');
@@ -78,19 +84,20 @@ class StaticRunOneTerminalOutputLifeCycle {
         }
     }
     printTaskTerminalOutput(task, status, terminalOutput) {
+        const isSilent = this.args.silent === true;
         const args = (0, utils_1.getPrintableCommandArgsForTask)(task);
         if (this.args.verbose ||
             status === 'success' ||
             status === 'failure' ||
             task.target.project === this.initiatingProject) {
-            output_1.output.logCommandOutput(args.join(' '), status, terminalOutput);
+            output_1.output.logCommandOutput(args.join(' '), status, terminalOutput, isSilent);
         }
         else {
             /**
              * Do not show the terminal output in the case where it is not the initiating project and verbose is not set,
              * but still print the command that was run and its status (so that cache hits can still be traced).
              */
-            output_1.output.logCommandOutput(args.join(' '), status, '');
+            output_1.output.logCommandOutput(args.join(' '), status, '', isSilent);
         }
     }
 }
diff --git a/node_modules/nx/src/utils/output.js b/node_modules/nx/src/utils/output.js
index 7d8eb43..8e9c0fc 100644
--- a/node_modules/nx/src/utils/output.js
+++ b/node_modules/nx/src/utils/output.js
@@ -157,20 +157,22 @@ class CLIOutput {
         this.addNewline();
         this.addNewline();
     }
-    logCommandOutput(message, taskStatus, output) {
+    logCommandOutput(message, taskStatus, output, isSilent) {
         let commandOutputWithStatus = this.getCommandWithStatus(message, taskStatus);
         if (process.env.NX_SKIP_LOG_GROUPING !== 'true' &&
-            process.env.GITHUB_ACTIONS) {
+            process.env.GITHUB_ACTIONS && !isSilent) {
             const icon = this.getStatusIcon(taskStatus);
             commandOutputWithStatus = `${GH_GROUP_PREFIX}${icon} ${commandOutputWithStatus}`;
         }
-        this.addNewline();
-        this.writeToStdOut(commandOutputWithStatus);
-        this.addNewline();
-        this.addNewline();
+        if (!isSilent) {
+            this.addNewline();
+            this.writeToStdOut(commandOutputWithStatus);
+            this.addNewline();
+            this.addNewline();
+        }
         this.writeToStdOut(output);
         if (process.env.NX_SKIP_LOG_GROUPING !== 'true' &&
-            process.env.GITHUB_ACTIONS) {
+            process.env.GITHUB_ACTIONS && !isSilent) {
             this.writeToStdOut(GH_GROUP_SUFFIX);
         }
     }
